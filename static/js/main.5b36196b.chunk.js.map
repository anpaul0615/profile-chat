{"version":3,"sources":["lib/cognito-client.js","lib/mqtt-client.js","lib/policy-manager.js","lib/index.js","components/ChatSignin/index.js","components/ChatSignin/SigninForm.js","lib/apigateway-client.js","lib/sigV4Client.js","components/ChatSignup/index.js","components/ChatSignup/SignupForm.js","components/Chat/index.js","components/ChatGroup/index.js","components/Chat/Body/MessageHistory/Message.js","components/Chat/Body/MessageHistory/MoreButton.js","components/Chat/Body/MessageHistory/index.js","components/Chat/Body/MessageInputBox/InputBox.js","components/Chat/Body/MessageInputBox/SendButton.js","components/Chat/Body/MessageInputBox/index.js","components/Chat/Body/index.js","components/Chat/Header/ChatGroupButton.js","components/Chat/Header/AppExitButton.js","components/Chat/Header/index.js","components/ChatGroup/Body/GroupList/GroupListItem.js","components/ChatGroup/Body/GroupList/index.js","components/ChatGroup/Body/index.js","components/ChatGroup/Header/CloseButton.js","components/ChatGroup/Header/index.js","components/LoadingCircle/index.js","App.js","serviceWorker.js","index.js"],"names":["CognitoClient","globalConfig","Object","classCallCheck","this","userPool","CognitoIdentity","UserPoolId","COGNITO_CONFIG","ClientId","_this","Promise","resolve","reject","cognitoUser","username","Error","_this2","credentials","_this3","idToken","cognitoUserSession","getIdToken","getJwtToken","providerKey","concat","endpoint","cognitoCredentials","AWS","IdentityPoolId","Logins","defineProperty","refresh","err","_this4","getCurrentUser","getSession","signInUserSession","userName","password","_this5","Username","Pool","authenticationDetails","Password","authenticateUser","onSuccess","onFailure","email","_this6","split","attributeList","Name","Value","signUp","result","user","getUsername","signOut","storage","length","clear","MQTTClient","clientId","mqtt","end","AWSIoTDeviceSDK","device","region","IOT_CONFIG","host","protocol","maximumReconnectTimeMs","accessKeyId","secretKey","secretAccessKey","sessionToken","on","topic","messageChunk","recieveMessageCallback","toString","callback","message","publish","subscribe","granted","unsubscribe","PolicyManager","iotClient","policyName","principal","config","update","attachPrincipalPolicy","data","__webpack_require__","d","__webpack_exports__","apigwClient","cognitoClient","mqttClient","poilcyManager","AWS_COMMON_CONFIG","APIGatewayClient","ChatSigninWrapper","styled","div","_templateObject","ChatSignin","props","D_PAUL_workspace_profile_chat_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","D_PAUL_workspace_profile_chat_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","D_PAUL_workspace_profile_chat_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","call","checkPreviousSessionData","D_PAUL_workspace_profile_chat_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","D_PAUL_workspace_profile_chat_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","currentUser","currentGroup","wrap","_context","prev","next","libs","setUserSessionFromStorage","updateCredentials","getCredentials","sent","getUserName","setGlobalState","isPending","attachIotPolicy","identityId","checkMessageGroup","createMessageGroup","currentPage","t0","stop","attachUserIdentityToPolicy","groupId","invokeAPIGateway","path","method","queryParams","then","catch","body","groupName","groupUsers","handleInputEmail","event","target","value","setState","handleInputPassword","handleSignin","_callee2","_this$state","_context2","state","clearStorage","setUserSessionByAuthentication","global","window","alert","handleMoveSignupPage","_callee3","_context3","getGlobalState","react__WEBPACK_IMPORTED_MODULE_8___default","createElement","_SigninForm__WEBPACK_IMPORTED_MODULE_10__","React","Component","SigninFormWrapper","MessageButton","span","_templateObject2","SigninForm","react__WEBPACK_IMPORTED_MODULE_1___default","semantic_ui_react__WEBPACK_IMPORTED_MODULE_4__","textAlign","style","height","verticalAlign","Column","maxWidth","semantic_ui_react__WEBPACK_IMPORTED_MODULE_5__","as","color","semantic_ui_react__WEBPACK_IMPORTED_MODULE_6__","size","semantic_ui_react__WEBPACK_IMPORTED_MODULE_7__","Input","icon","iconPosition","fluid","placeholder","onChange","type","semantic_ui_react__WEBPACK_IMPORTED_MODULE_8__","onClick","semantic_ui_react__WEBPACK_IMPORTED_MODULE_9__","headers","Date","now","expireTime","client","sigV4Client","newClient","accessKey","APIGATEWAY_CONFIG","signedRequest","signRequest","signedBody","JSON","stringify","signedHeaders","fetch","url","results","status","text","json","util","URL","AWS_SHA_256","AWS4_REQUEST","AWS4","hash","SHA256","hexEncode","encHex","hmac","secret","HmacSHA256","asBytes","buildCanonicalQueryString","keys","sortedQueryParams","forEach","key","push","sort","canonicalQueryString","encodeURIComponent","substr","buildCanonicalSignedHeaders","sortedKeys","toLowerCase","join","buildCanonicalRequest","payload","uri","encodeURI","canonicalHeaders","buildCanonicalHeaders","awsSigV4Client","undefined","serviceName","defaultAcceptType","defaultContentType","invokeUrl","exec","pathComponent","substring","request","verb","toUpperCase","D_PAUL_workspace_profile_chat_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","Accept","datetime","toISOString","replace","parser","parse","hostname","hashedCanonicalRequest","hashCanonicalRequest","credentialScope","service","buildCredentialScope","stringToSign","buildStringToSign","signature","calculateSignature","calculateSigningKey","buildAuthorizationHeader","queryString","ChatSignupWrapper","ChatSignup","handleSignup","passwordConfirm","test","registerNewAccount","handleInputPasswordConfirm","handleMoveSigninPage","_SignupForm__WEBPACK_IMPORTED_MODULE_10__","SignupFormWrapper","SignupForm","ChatWrapper","Chat","D_PAUL_workspace_profile_chat_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__","D_PAUL_workspace_profile_chat_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_5__","D_PAUL_workspace_profile_chat_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6__","initMessages","D_PAUL_workspace_profile_chat_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","D_PAUL_workspace_profile_chat_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","_ref2","messageHistory","messages","startDate","endtDate","limit","map","e","isMine","content","regDate","reverse","moveMessageHistoryScollToBottom","initMessageSubscribe","_ref4","init","registerMessageCallback","handleRecievedMessage","initMessageHistoryScoll","el","messageHistoryScrollDiv","scrollIntoView","handleSignout","confirm","signout","disconnect","parent","postMessage","_ref6","_callee4","newMessage","_ref7","_context4","prevState","D_PAUL_workspace_profile_chat_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","_x","apply","arguments","handleInputMessage","messageBuffer","handleSendMessage","_callee5","_ref9","messageBody","_context5","abrupt","handleSendMessageShortcut","keyCode","ctrlKey","_callee6","_context6","handleGetOlderMessages","_callee7","lastMessage","lastMessageTime","_ref12","olderMessages","_context7","getTime","endDate","document","addEventListener","removeEventListener","react__WEBPACK_IMPORTED_MODULE_9___default","_Header__WEBPACK_IMPORTED_MODULE_11__","handleClickAppExitButton","handleClickOpenChatGroupButton","_Body__WEBPACK_IMPORTED_MODULE_12__","ChatGroupWrapper","ChatGroup","initChatGroups","_ref3","chatGroups","handleCloseChatGroupPage","handleChangeCurrentChatGroup","_ref5","changeGroup","_Header__WEBPACK_IMPORTED_MODULE_10__","handleClickCloseChatGroupButton","_Body__WEBPACK_IMPORTED_MODULE_11__","handleClickChatGroup","MessageRawWrapper","MessageBalloonWrapper","Message","react_default","MoreButtonWrapper","MoreButton_templateObject","TextButton","MoreButton_templateObject2","MoreButton","MessageHistoryWrapper","MessageHistory_templateObject","ScrollWrapper","MessageHistory_templateObject2","MessageHistory","innerRef","MessageHistory_MoreButton","idx","MessageHistory_Message","InputBoxWrapper","textarea","InputBox_templateObject","InputBox","handleChangeInputText","SendButtonWrapper","SendButton_templateObject","SendButton","handleClickMessageSendButton","MessageInputBoxWrapper","MessageInputBox_templateObject","MessageInputBox","MessageInputBox_InputBox","MessageInputBox_SendButton","ChatBodyWrapper","Body_templateObject","ChatBody","Body_MessageHistory","Body_MessageInputBox","ChatGroupButtonWrapper","ChatGroupButton","AppExitButtonWrapper","AppExitButton_templateObject","AppExitButton","ChatHeaderWrapper","Header_templateObject","ChatHeader","Header_ChatGroupButton","Header_AppExitButton","ChatGroupListItemWrapper","GroupName","LastMessage","_templateObject3","ChatGroupListItem","defaultProps","ChatGroupListWrapper","GroupList_templateObject","ChatGroupList","group","GroupListItem","groupNickName","groupnickname","ChatGroupBodyWrapper","ChatGroupBody","GroupList","CloseButtonWrapper","CloseButton","ChatGroupHeaderWrapper","ChatGroupHeader","Header_CloseButton","LoadingCircleWrapper","LoadingCircle","Loader","active","App","possibleConstructorReturn","getPrototypeOf","newState","objectSpread","className","components_LoadingCircle","Boolean","location","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5b36196b.chunk.js","sourcesContent":["import * as AWS from 'aws-sdk';\r\nimport * as CognitoIdentity from 'amazon-cognito-identity-js';\r\nimport COGNITO_CONFIG from '../configs/aws.cognito.json';\r\n\r\nexport default class CognitoClient {\r\n  constructor(globalConfig) {\r\n    this.globalConfig = globalConfig;\r\n    this.userPool = new CognitoIdentity.CognitoUserPool({\r\n      UserPoolId: COGNITO_CONFIG.UserPoolId,\r\n      ClientId: COGNITO_CONFIG.ClientId,\r\n    });\r\n  }\r\n\r\n  getUserName() {\r\n    return new Promise((resolve, reject) => {\r\n      if (!this.cognitoUser) return reject(new Error('Empty Session Data..!'));\r\n      return resolve(this.cognitoUser.username);\r\n    });\r\n  }\r\n\r\n  getCredentials() {\r\n    return new Promise(resolve => resolve(this.globalConfig.credentials));\r\n  }\r\n\r\n  updateCredentials() {\r\n    return new Promise((resolve, reject) => {\r\n      const idToken = this.cognitoUserSession.getIdToken().getJwtToken();\r\n      const providerKey = `${COGNITO_CONFIG.endpoint}/${COGNITO_CONFIG.UserPoolId}`;\r\n      const cognitoCredentials = new AWS.CognitoIdentityCredentials({\r\n        IdentityPoolId: COGNITO_CONFIG.IdentityPoolId,\r\n        Logins: {\r\n          [providerKey]: idToken,\r\n        },\r\n      });\r\n      // Set Cognito Credentials\r\n      this.globalConfig.credentials = cognitoCredentials;\r\n      this.globalConfig.credentials.refresh((err) => {\r\n        if (err) return reject(err);\r\n        return resolve();\r\n      });\r\n    });\r\n  }\r\n\r\n  setUserSessionFromStorage() {\r\n    return new Promise((resolve, reject) => {\r\n      // Check Previous-Session-Data Form Cognito-Storage (Localstorage/Cookie)\r\n      this.cognitoUser = this.userPool.getCurrentUser();\r\n      // Get Cognito-Session From Cognito-Storage\r\n      this.cognitoUser.getSession((err, signInUserSession) => {\r\n        if (err) return reject(err);\r\n        this.cognitoUserSession = signInUserSession;\r\n        return resolve();\r\n      });\r\n    });\r\n  }\r\n\r\n  setUserSessionByAuthentication(userName, password) {\r\n    return new Promise((resolve, reject) => {\r\n      // Init CognitoUser\r\n      this.cognitoUser = new CognitoIdentity.CognitoUser({\r\n        Username: userName,\r\n        Pool: this.userPool,\r\n      });\r\n      // Init AuthenticationDetails\r\n      const authenticationDetails = new CognitoIdentity.AuthenticationDetails({\r\n        Username: userName,\r\n        Password: password,\r\n      });\r\n      // Authenticate Cognito User\r\n      this.cognitoUser.authenticateUser(authenticationDetails, {\r\n        onSuccess: (cognitoUserSession) => {\r\n          this.cognitoUserSession = cognitoUserSession;\r\n          resolve(cognitoUserSession);\r\n        },\r\n        onFailure: err => reject(err),\r\n      });\r\n    });\r\n  }\r\n\r\n  registerNewAccount(email, password) {\r\n    return new Promise((resolve, reject) => {\r\n      // Set Attributes\r\n      const userName = email.split('@')[0];\r\n      const attributeList = [\r\n        new CognitoIdentity.CognitoUserAttribute({\r\n          Name: 'email',\r\n          Value: email,\r\n        }),\r\n        new CognitoIdentity.CognitoUserAttribute({\r\n          Name: 'name',\r\n          Value: userName,\r\n        }),\r\n      ];\r\n      this.userPool.signUp(userName, password, attributeList, null, (err, result) => {\r\n        if (err) return reject(err);\r\n        return resolve({ userName: result.user.getUsername() });\r\n      });\r\n    });\r\n  }\r\n\r\n  signout() {\r\n    this.cognitoUser.signOut();\r\n  }\r\n\r\n  clearStorage() {\r\n    if (this.userPool.storage.length !== 0) {\r\n      this.userPool.storage.clear();\r\n    }\r\n  }\r\n}\r\n","import AWSIoTDeviceSDK from 'aws-iot-device-sdk';\r\nimport IOT_CONFIG from '../configs/aws.iot.json';\r\n\r\nexport default class MQTTClient {\r\n  constructor(globalConfig) {\r\n    this.globalConfig = globalConfig;\r\n  }\r\n\r\n  init(clientId) {\r\n    if (this.mqtt) {\r\n      this.mqtt.end();\r\n      delete this.mqtt;\r\n    }\r\n    this.mqtt = AWSIoTDeviceSDK.device({\r\n      region: IOT_CONFIG.region,\r\n      host: IOT_CONFIG['profile-chat'].endpoint,\r\n      clientId,\r\n      protocol: 'wss',\r\n      maximumReconnectTimeMs: 5000,\r\n      // debug: true,\r\n      accessKeyId: this.globalConfig.credentials.accessKeyId,\r\n      secretKey: this.globalConfig.credentials.secretAccessKey,\r\n      sessionToken: this.globalConfig.credentials.sessionToken,\r\n    });\r\n    this.mqtt.on('connect', () => {\r\n      // console.log('mqtt#connect..');\r\n    });\r\n    this.mqtt.on('reconnect', () => {\r\n      // console.log('mqtt#reconnect..');\r\n    });\r\n    this.mqtt.on('offline', () => {\r\n      // console.log('mqtt#offline..');\r\n    });\r\n    this.mqtt.on('error', () => {\r\n      // console.log('mqtt#error..');\r\n    });\r\n    this.mqtt.on('message', (topic, messageChunk) => {\r\n      // console.log('mqtt#message..');\r\n      this.recieveMessageCallback(messageChunk.toString());\r\n    });\r\n  }\r\n\r\n  registerMessageCallback(callback) {\r\n    if (this.recieveMessageCallback) {\r\n      delete this.recieveMessageCallback;\r\n    }\r\n    this.recieveMessageCallback = callback;\r\n  }\r\n\r\n  publish(topic, message) {\r\n    return new Promise((resolve, reject) => {\r\n      this.mqtt.publish(topic, message, null, (err) => {\r\n        if (err) reject(err);\r\n        else resolve();\r\n      });\r\n    });\r\n  }\r\n\r\n  subscribe(topic) {\r\n    return new Promise((resolve, reject) => {\r\n      this.mqtt.subscribe(topic, null, (err, granted) => {\r\n        if (err) reject(err);\r\n        else resolve(granted);\r\n      });\r\n    });\r\n  }\r\n\r\n  unsubscribe(topic) {\r\n    return new Promise((resolve, reject) => {\r\n      this.mqtt.unsubscribe(topic, (err) => {\r\n        if (err) reject(err);\r\n        else resolve();\r\n      });\r\n    });\r\n  }\r\n\r\n  disconnect() {\r\n    this.mqtt.end();\r\n  }\r\n}\r\n","import * as AWS from 'aws-sdk';\r\nimport IOT_CONFIG from '../configs/aws.iot.json';\r\n\r\nexport default class PolicyManager {\r\n  constructor(globalConfig) {\r\n    this.iotClient = new AWS.Iot();\r\n    this.globalConfig = globalConfig;\r\n  }\r\n\r\n  async attachUserIdentityToPolicy(policyName, principal) {\r\n    this.iotClient.config.update({\r\n      credentials: this.globalConfig.credentials,\r\n      region: IOT_CONFIG.region,\r\n      endpoint: IOT_CONFIG.endpoint,\r\n    });\r\n    return new Promise((resolve, reject) => {\r\n      this.iotClient.attachPrincipalPolicy({ policyName, principal }, (err, data) => {\r\n        if (err) return reject(err);\r\n        return resolve(data);\r\n      });\r\n    });\r\n  }\r\n}\r\n","import * as AWS from 'aws-sdk';\nimport AWS_COMMON_CONFIG from '../configs/aws.common.json';\n\nimport CognitoClient from './cognito-client';\nimport MQTTClient from './mqtt-client';\nimport PolicyManager from './policy-manager';\nimport APIGatewayClient from './apigateway-client';\n\nAWS.config.update({\n  region: AWS_COMMON_CONFIG.region,\n});\n\nexport const apigwClient = new APIGatewayClient(AWS.config);\nexport const cognitoClient = new CognitoClient(AWS.config);\nexport const mqttClient = new MQTTClient(AWS.config);\nexport const poilcyManager = new PolicyManager(AWS.config);\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport SigninForm from './SigninForm';\r\nimport * as libs from '../../lib';\r\n\r\n/* Style-Wrapper */\r\nconst ChatSigninWrapper = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  background: rgba(0,0,0,0.6);\r\n`;\r\n/* Component */\r\nclass ChatSignin extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const { getGlobalState, setGlobalState } = props;\r\n    this.getGlobalState = getGlobalState;\r\n    this.setGlobalState = setGlobalState;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.checkPreviousSessionData();\r\n  }\r\n\r\n  checkPreviousSessionData = async () => {\r\n    try {\r\n      // Get Credentials From Previous Session Data\r\n      await libs.cognitoClient.setUserSessionFromStorage();\r\n      await libs.cognitoClient.updateCredentials();\r\n      const cognitoCredentials = await libs.cognitoClient.getCredentials();\r\n      const userName = await libs.cognitoClient.getUserName();\r\n      // Set Pending State To Start\r\n      await this.setGlobalState({\r\n        isPending: true,\r\n      });\r\n      // Attach IoT Principal Policy\r\n      await this.attachIotPolicy(cognitoCredentials.identityId);\r\n      // Check Message Group\r\n      const currentUser = userName;\r\n      const currentGroup = currentUser;\r\n      if (!await this.checkMessageGroup(currentGroup)) {\r\n        await this.createMessageGroup(currentGroup, currentUser);\r\n      }\r\n      // Update State\r\n      await this.setGlobalState({\r\n        isPending: false,\r\n        currentPage: '/',\r\n        currentUser,\r\n        currentGroup,\r\n      });\r\n    } catch (e) {\r\n      // console.log(e);\r\n    }\r\n  }\r\n\r\n  attachIotPolicy = identityId => libs.poilcyManager.attachUserIdentityToPolicy('iot-chat-policy', identityId);\r\n\r\n  checkMessageGroup = groupId => libs.apigwClient.invokeAPIGateway({\r\n    path: '/messages/group',\r\n    method: 'GET',\r\n    queryParams: { groupId },\r\n  }).then(() => true).catch(() => false);\r\n\r\n  createMessageGroup = (groupId, userName) => libs.apigwClient.invokeAPIGateway({\r\n    path: '/messages/group',\r\n    method: 'POST',\r\n    body: {\r\n      groupId,\r\n      groupName: userName,\r\n      groupUsers: [userName, 'anpaul0615'],\r\n    },\r\n  });\r\n\r\n  handleInputEmail = (event) => {\r\n    const email = event.target.value;\r\n    this.setState(() => ({\r\n      email,\r\n    }));\r\n  }\r\n\r\n  handleInputPassword = (event) => {\r\n    const password = event.target.value;\r\n    this.setState(() => ({\r\n      password,\r\n    }));\r\n  }\r\n\r\n  handleSignin = async () => {\r\n    try {\r\n      // Extract User Name\r\n      const { email, password } = this.state;\r\n      const userName = email.split('@')[0];\r\n      // Clear Cognito Storage\r\n      libs.cognitoClient.clearStorage();\r\n      // Get Cognito Credentials\r\n      await libs.cognitoClient.setUserSessionByAuthentication(userName, password);\r\n      await libs.cognitoClient.updateCredentials();\r\n      const cognitoCredentials = await libs.cognitoClient.getCredentials();\r\n      // Set Pending State To Start\r\n      await this.setGlobalState({\r\n        isPending: true,\r\n      });\r\n      // Attach IoT Principal Policy\r\n      await this.attachIotPolicy(cognitoCredentials.identityId);\r\n      // Check Message Group\r\n      const currentUser = userName;\r\n      const currentGroup = currentUser;\r\n      if (!await this.checkMessageGroup(currentGroup)) {\r\n        await this.createMessageGroup(currentGroup, currentUser);\r\n      }\r\n      // Update State\r\n      await this.setGlobalState({\r\n        isPending: false,\r\n        currentPage: '/',\r\n        currentUser,\r\n        currentGroup,\r\n      });\r\n    } catch (e) {\r\n      // console.log(e);\r\n      global.window.alert(e.message || e);\r\n    }\r\n  }\r\n\r\n  handleMoveSignupPage = async () => {\r\n    await this.setGlobalState({\r\n      currentPage: '/signup',\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <ChatSigninWrapper>\r\n        <SigninForm\r\n          handleInputEmail={this.handleInputEmail}\r\n          handleInputPassword={this.handleInputPassword}\r\n          handleSignin={this.handleSignin}\r\n          handleMoveSignupPage={this.handleMoveSignupPage}\r\n        />\r\n      </ChatSigninWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nChatSignin.propTypes = {\r\n  getGlobalState: PropTypes.func.isRequired,\r\n  setGlobalState: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ChatSignin;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport {\r\n  Button, Form, Grid, Header, Segment, Message,\r\n} from 'semantic-ui-react';\r\n\r\n/* Style-Wrapper */\r\nconst SigninFormWrapper = styled.div`\r\n  max-width: 500px;\r\n  max-height: 440px;\r\n  margin: 0 auto;\r\n  position: relative;\r\n  top: 30%;\r\n  border-radius: 8px;\r\n  background-color: transparent;\r\n  background: rgba(255,255,255,1);\r\n`;\r\nconst MessageButton = styled.span`\r\n  color: #4183c4;\r\n  text-decoration: none;\r\n  cursor: pointer;\r\n`;\r\n/* Component */\r\nconst SigninForm = (props) => {\r\n  const {\r\n    handleInputEmail, handleInputPassword,\r\n    handleSignin, handleMoveSignupPage,\r\n  } = props;\r\n  return (\r\n    <SigninFormWrapper>\r\n      <Grid textAlign=\"center\" style={{ height: '100%' }} verticalAlign=\"middle\">\r\n        <Grid.Column style={{ maxWidth: 450 }}>\r\n          <Header as=\"h2\" color=\"grey\" textAlign=\"center\">\r\n            Log-in to your account\r\n          </Header>\r\n          <Form size=\"large\">\r\n            <Segment>\r\n              <Form.Input\r\n                icon=\"user\"\r\n                iconPosition=\"left\"\r\n                fluid\r\n                placeholder=\"E-mail address\"\r\n                onChange={handleInputEmail}\r\n              />\r\n              <Form.Input\r\n                icon=\"lock\"\r\n                iconPosition=\"left\"\r\n                fluid\r\n                placeholder=\"Password\"\r\n                type=\"password\"\r\n                onChange={handleInputPassword}\r\n              />\r\n              <Button\r\n                color=\"blue\"\r\n                size=\"large\"\r\n                fluid\r\n                onClick={handleSignin}\r\n              >\r\n                Signin\r\n              </Button>\r\n            </Segment>\r\n            <Message>\r\n              New to here? &nbsp;\r\n              <MessageButton onClick={handleMoveSignupPage}>\r\n                Sign Up\r\n              </MessageButton>\r\n            </Message>\r\n          </Form>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </SigninFormWrapper>\r\n  );\r\n};\r\n\r\nSigninForm.propTypes = {\r\n  handleInputEmail: PropTypes.func.isRequired,\r\n  handleInputPassword: PropTypes.func.isRequired,\r\n  handleSignin: PropTypes.func.isRequired,\r\n  handleMoveSignupPage: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default SigninForm;\r\n","import APIGATEWAY_CONFIG from '../configs/aws.apigateway.json';\nimport sigV4Client from './sigV4Client';\n\nexport default class APIGatewayClient {\n  constructor(globalConfig) {\n    this.globalConfig = globalConfig;\n  }\n\n  async invokeAPIGateway({\n    path = '/', method = 'GET', headers = {}, queryParams = {}, body,\n  }) {\n    if (!this.globalConfig.credentials) {\n      throw new Error('User is not logged in..!');\n    }\n    if (Date.now() > this.globalConfig.credentials.expireTime - 60000) {\n      throw new Error('Expired-time is nearby..!');\n    }\n\n    const client = sigV4Client.newClient({\n      accessKey: this.globalConfig.credentials.accessKeyId,\n      secretKey: this.globalConfig.credentials.secretAccessKey,\n      sessionToken: this.globalConfig.credentials.sessionToken,\n      region: APIGATEWAY_CONFIG.region,\n      endpoint: APIGATEWAY_CONFIG['profile-chat'].endpoint,\n    });\n\n    const signedRequest = client.signRequest({\n      method,\n      path,\n      headers,\n      queryParams,\n      body,\n    });\n\n    const signedBody = body ? JSON.stringify(body) : body;\n    const signedHeaders = signedRequest.headers;\n\n    const results = await global.fetch(signedRequest.url, {\n      method,\n      headers: signedHeaders,\n      body: signedBody,\n    });\n\n    if (results.status !== 200) {\n      throw new Error(await results.text());\n    }\n\n    return results.json();\n  }\n}\n","import SHA256 from 'crypto-js/sha256';\r\nimport encHex from 'crypto-js/enc-hex';\r\nimport HmacSHA256 from 'crypto-js/hmac-sha256';\r\nimport URL from 'url';\r\n\r\nconst sigV4Client = {};\r\n\r\n/* IE11 URL Polyfill */\r\nsigV4Client.util = {\r\n  URL,\r\n};\r\n\r\nsigV4Client.newClient = (config) => {\r\n  const AWS_SHA_256 = 'AWS4-HMAC-SHA256';\r\n  const AWS4_REQUEST = 'aws4_request';\r\n  const AWS4 = 'AWS4';\r\n  const X_AMZ_DATE = 'x-amz-date';\r\n  const X_AMZ_SECURITY_TOKEN = 'x-amz-security-token';\r\n  const HOST = 'host';\r\n  const AUTHORIZATION = 'Authorization';\r\n\r\n  function hash(value) {\r\n    return SHA256(value); // eslint-disable-line\r\n  }\r\n\r\n  function hexEncode(value) {\r\n    return value.toString(encHex);\r\n  }\r\n\r\n  function hmac(secret, value) {\r\n    return HmacSHA256(value, secret, { asBytes: true }); // eslint-disable-line\r\n  }\r\n\r\n  function buildCanonicalUri(uri) {\r\n    return encodeURI(uri);\r\n  }\r\n\r\n  function buildCanonicalQueryString(queryParams) {\r\n    if (Object.keys(queryParams).length < 1) {\r\n      return '';\r\n    }\r\n\r\n    const sortedQueryParams = [];\r\n    Object.keys(queryParams).forEach((key) => {\r\n      sortedQueryParams.push(key);\r\n    });\r\n    sortedQueryParams.sort();\r\n\r\n    let canonicalQueryString = '';\r\n    sortedQueryParams.forEach((key) => {\r\n      canonicalQueryString += `${key}=${encodeURIComponent(queryParams[key])}&`;\r\n    });\r\n    return canonicalQueryString.substr(0, canonicalQueryString.length - 1);\r\n  }\r\n\r\n  function buildCanonicalHeaders(headers) {\r\n    const sortedKeys = [];\r\n    Object.keys(headers).forEach((key) => {\r\n      sortedKeys.push(key);\r\n    });\r\n    sortedKeys.sort();\r\n\r\n    let canonicalHeaders = '';\r\n    sortedKeys.forEach((key) => {\r\n      canonicalHeaders += `${key.toLowerCase()}:${headers[key]}\\n`;\r\n    });\r\n    return canonicalHeaders;\r\n  }\r\n\r\n  function buildCanonicalSignedHeaders(headers) {\r\n    const sortedKeys = [];\r\n    Object.keys(headers).forEach((key) => {\r\n      sortedKeys.push(key.toLowerCase());\r\n    });\r\n    sortedKeys.sort();\r\n    return sortedKeys.join(';');\r\n  }\r\n\r\n  function buildCanonicalRequest(method, path, queryParams, headers, payload) {\r\n    return [\r\n      method,\r\n      buildCanonicalUri(path),\r\n      buildCanonicalQueryString(queryParams),\r\n      buildCanonicalHeaders(headers),\r\n      buildCanonicalSignedHeaders(headers),\r\n      hexEncode(hash(payload)),\r\n    ].join('\\n');\r\n  }\r\n\r\n  function hashCanonicalRequest(request) {\r\n    return hexEncode(hash(request));\r\n  }\r\n\r\n  function buildStringToSign(datetime, credentialScope, hashedCanonicalRequest) {\r\n    return `${AWS_SHA_256}\\n${datetime}\\n${credentialScope}\\n${hashedCanonicalRequest}`;\r\n  }\r\n\r\n  function buildCredentialScope(datetime, region, service) {\r\n    return `${datetime.substr(0, 8)}/${region}/${service}/${AWS4_REQUEST}`;\r\n  }\r\n\r\n  function calculateSigningKey(secretKey, datetime, region, service) {\r\n    return hmac(\r\n      hmac(\r\n        hmac(hmac(AWS4 + secretKey, datetime.substr(0, 8)), region),\r\n        service,\r\n      ),\r\n      AWS4_REQUEST,\r\n    );\r\n  }\r\n\r\n  function calculateSignature(key, stringToSign) {\r\n    return hexEncode(hmac(key, stringToSign));\r\n  }\r\n\r\n  function buildAuthorizationHeader(accessKey, credentialScope, headers, signature) {\r\n    return `${AWS_SHA_256} Credential=${accessKey}/${credentialScope}, SignedHeaders=${buildCanonicalSignedHeaders(headers)}, Signature=${signature}`;\r\n  }\r\n\r\n  const awsSigV4Client = {};\r\n  if (config.accessKey === undefined || config.secretKey === undefined) {\r\n    return awsSigV4Client;\r\n  }\r\n  awsSigV4Client.accessKey = config.accessKey;\r\n  awsSigV4Client.secretKey = config.secretKey;\r\n  awsSigV4Client.sessionToken = config.sessionToken;\r\n  awsSigV4Client.serviceName = config.serviceName || 'execute-api';\r\n  awsSigV4Client.region = config.region || 'us-east-1';\r\n  awsSigV4Client.defaultAcceptType = config.defaultAcceptType || 'application/json';\r\n  awsSigV4Client.defaultContentType = config.defaultContentType || 'application/json';\r\n\r\n  const invokeUrl = config.endpoint;\r\n  const endpoint = /(^https?:\\/\\/[^/]+)/g.exec(invokeUrl)[1];\r\n  const pathComponent = invokeUrl.substring(endpoint.length);\r\n\r\n  awsSigV4Client.endpoint = endpoint;\r\n  awsSigV4Client.pathComponent = pathComponent;\r\n\r\n  awsSigV4Client.signRequest = (request) => {\r\n    const verb = request.method.toUpperCase();\r\n    const path = awsSigV4Client.pathComponent + request.path;\r\n    const queryParams = { ...request.queryParams };\r\n    const headers = { ...request.headers };\r\n\r\n    // If the user has not specified an override for Content type the use default\r\n    if (headers['Content-Type'] === undefined) {\r\n      headers['Content-Type'] = awsSigV4Client.defaultContentType;\r\n    }\r\n\r\n    // If the user has not specified an override for Accept type the use default\r\n    if (headers.Accept === undefined) {\r\n      headers.Accept = awsSigV4Client.defaultAcceptType;\r\n    }\r\n\r\n    let body = { ...request.body };\r\n    // override request body and set to empty when signing GET requests\r\n    if (request.body === undefined || verb === 'GET') {\r\n      body = '';\r\n    } else {\r\n      body = JSON.stringify(body);\r\n    }\r\n\r\n    // If there is no body remove the content-type header so it is not\r\n    // included in SigV4 calculation\r\n    if (body === '' || body === undefined || body === null) {\r\n      delete headers['Content-Type'];\r\n    }\r\n\r\n    const datetime = new Date()\r\n      .toISOString()\r\n      .replace(/\\.\\d{3}Z$/, 'Z')\r\n      .replace(/[:-]|\\.\\d{3}/g, '');\r\n    headers[X_AMZ_DATE] = datetime;\r\n\r\n    /* IE11 URL Polyfill */\r\n    const parser = sigV4Client.util.URL.parse(awsSigV4Client.endpoint);\r\n    headers[HOST] = parser.hostname;\r\n    // const parser = new URL(awsSigV4Client.endpoint);\r\n    // headers[HOST] = parser.hostname;\r\n\r\n    const canonicalRequest = buildCanonicalRequest(\r\n      verb,\r\n      path,\r\n      queryParams,\r\n      headers,\r\n      body,\r\n    );\r\n    const hashedCanonicalRequest = hashCanonicalRequest(canonicalRequest);\r\n    const credentialScope = buildCredentialScope(\r\n      datetime,\r\n      awsSigV4Client.region,\r\n      awsSigV4Client.serviceName,\r\n    );\r\n    const stringToSign = buildStringToSign(\r\n      datetime,\r\n      credentialScope,\r\n      hashedCanonicalRequest,\r\n    );\r\n    const signingKey = calculateSigningKey(\r\n      awsSigV4Client.secretKey,\r\n      datetime,\r\n      awsSigV4Client.region,\r\n      awsSigV4Client.serviceName,\r\n    );\r\n    const signature = calculateSignature(signingKey, stringToSign);\r\n    headers[AUTHORIZATION] = buildAuthorizationHeader(\r\n      awsSigV4Client.accessKey,\r\n      credentialScope,\r\n      headers,\r\n      signature,\r\n    );\r\n    if (awsSigV4Client.sessionToken !== undefined\r\n      && awsSigV4Client.sessionToken !== '') {\r\n      headers[X_AMZ_SECURITY_TOKEN] = awsSigV4Client.sessionToken;\r\n    }\r\n    delete headers[HOST];\r\n\r\n    let url = awsSigV4Client.endpoint + path;\r\n    const queryString = buildCanonicalQueryString(queryParams);\r\n    if (queryString !== '') {\r\n      url += `?${queryString}`;\r\n    }\r\n\r\n    // Need to re-attach Content-Type if it is not specified at this point\r\n    if (headers['Content-Type'] === undefined) {\r\n      headers['Content-Type'] = awsSigV4Client.defaultContentType;\r\n    }\r\n\r\n    return {\r\n      headers,\r\n      url,\r\n    };\r\n  };\r\n\r\n  return awsSigV4Client;\r\n};\r\n\r\nexport default sigV4Client;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport SignupForm from './SignupForm';\r\nimport * as libs from '../../lib';\r\n\r\n/* Style-Wrapper */\r\nconst ChatSignupWrapper = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  background: rgba(0,0,0,0.6);\r\n`;\r\n/* Component */\r\nclass ChatSignup extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const { getGlobalState, setGlobalState } = props;\r\n    this.getGlobalState = getGlobalState;\r\n    this.setGlobalState = setGlobalState;\r\n  }\r\n\r\n  attachIotPolicy = identityId => libs.poilcyManager.attachUserIdentityToPolicy('iot-chat-policy', identityId);\r\n\r\n  checkMessageGroup = groupId => libs.apigwClient.invokeAPIGateway({\r\n    path: '/messages/group',\r\n    method: 'GET',\r\n    queryParams: { groupId },\r\n  }).then(() => true).catch(() => false);\r\n\r\n  createMessageGroup = (groupId, userName) => libs.apigwClient.invokeAPIGateway({\r\n    path: '/messages/group',\r\n    method: 'POST',\r\n    body: {\r\n      groupId,\r\n      groupName: userName,\r\n      groupUsers: [userName, 'anpaul0615'],\r\n    },\r\n  });\r\n\r\n  handleSignup = async () => {\r\n    try {\r\n      const { email, password, passwordConfirm } = this.state;\r\n      if (!/^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/.test(email)) {\r\n        global.window.alert('Email Format is Invalid..!');\r\n      } else if (password !== passwordConfirm) {\r\n        global.window.alert('Password Confirm is not matched..!');\r\n      } else {\r\n        // Get Cognito Credentials\r\n        await libs.cognitoClient.registerNewAccount(email, password);\r\n        // Notify Success to User\r\n        global.window.alert('Confirmation code was sent to your email!!');\r\n        // Go To Signin Page\r\n        await this.setGlobalState({\r\n          currentPage: '/signin',\r\n        });\r\n      }\r\n    } catch (e) {\r\n      // console.log(e);\r\n      global.window.alert(e.message || e);\r\n    }\r\n  }\r\n\r\n  handleInputEmail = (event) => {\r\n    const email = event.target.value;\r\n    this.setState(() => ({\r\n      email,\r\n    }));\r\n  }\r\n\r\n  handleInputPassword = (event) => {\r\n    const password = event.target.value;\r\n    this.setState(() => ({\r\n      password,\r\n    }));\r\n  }\r\n\r\n  handleInputPasswordConfirm = (event) => {\r\n    const passwordConfirm = event.target.value;\r\n    this.setState(() => ({\r\n      passwordConfirm,\r\n    }));\r\n  }\r\n\r\n  handleMoveSigninPage = async () => {\r\n    await this.setGlobalState({\r\n      currentPage: '/signin',\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <ChatSignupWrapper>\r\n        <SignupForm\r\n          handleInputEmail={this.handleInputEmail}\r\n          handleInputPassword={this.handleInputPassword}\r\n          handleInputPasswordConfirm={this.handleInputPasswordConfirm}\r\n          handleSignup={this.handleSignup}\r\n          handleMoveSigninPage={this.handleMoveSigninPage}\r\n        />\r\n      </ChatSignupWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nChatSignup.propTypes = {\r\n  getGlobalState: PropTypes.func.isRequired,\r\n  setGlobalState: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ChatSignup;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport {\r\n  Button, Form, Grid, Header, Segment, Message,\r\n} from 'semantic-ui-react';\r\n\r\n/* Style-Wrapper */\r\nconst SignupFormWrapper = styled.div`\r\n  max-width: 500px;\r\n  max-height: 440px;\r\n  margin: 0 auto;\r\n  position: relative;\r\n  top: 30%;\r\n  border-radius: 8px;\r\n  background-color: transparent;\r\n  background: rgba(255,255,255,1);\r\n`;\r\nconst MessageButton = styled.span`\r\n  color: #4183c4;\r\n  text-decoration: none;\r\n  cursor: pointer;\r\n`;\r\n/* Component */\r\nconst SignupForm = (props) => {\r\n  const {\r\n    handleInputEmail, handleInputPassword, handleInputPasswordConfirm,\r\n    handleSignup, handleMoveSigninPage,\r\n  } = props;\r\n  return (\r\n    <SignupFormWrapper>\r\n      <Grid textAlign=\"center\" style={{ height: '100%' }} verticalAlign=\"middle\">\r\n        <Grid.Column style={{ maxWidth: 450 }}>\r\n          <Header as=\"h2\" color=\"grey\" textAlign=\"center\">\r\n            Create new account\r\n          </Header>\r\n          <Form size=\"large\">\r\n            <Segment>\r\n              <Form.Input\r\n                icon=\"user\"\r\n                iconPosition=\"left\"\r\n                fluid\r\n                placeholder=\"E-mail address\"\r\n                onChange={handleInputEmail}\r\n              />\r\n              <Form.Input\r\n                icon=\"lock\"\r\n                iconPosition=\"left\"\r\n                fluid\r\n                placeholder=\"Password\"\r\n                type=\"password\"\r\n                onChange={handleInputPassword}\r\n              />\r\n              <Form.Input\r\n                icon=\"lock\"\r\n                iconPosition=\"left\"\r\n                fluid\r\n                placeholder=\"Password Confirm\"\r\n                type=\"password\"\r\n                onChange={handleInputPasswordConfirm}\r\n              />\r\n              <Button\r\n                color=\"blue\"\r\n                size=\"large\"\r\n                fluid\r\n                onClick={handleSignup}\r\n              >\r\n                  Signup\r\n              </Button>\r\n            </Segment>\r\n            <Message>\r\n              Already be registered? &nbsp;\r\n              <MessageButton onClick={handleMoveSigninPage}>\r\n                Sign In\r\n              </MessageButton>\r\n            </Message>\r\n          </Form>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </SignupFormWrapper>\r\n  );\r\n};\r\n\r\nSignupForm.propTypes = {\r\n  handleInputEmail: PropTypes.func.isRequired,\r\n  handleInputPassword: PropTypes.func.isRequired,\r\n  handleInputPasswordConfirm: PropTypes.func.isRequired,\r\n  handleSignup: PropTypes.func.isRequired,\r\n  handleMoveSigninPage: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default SignupForm;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport ChatHeader from './Header';\nimport ChatBody from './Body';\nimport * as libs from '../../lib';\n\n/* Style-Wrapper */\nconst ChatWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n`;\n/* Component */\nclass Chat extends React.Component {\n  constructor(props) {\n    super(props);\n    const { getGlobalState, setGlobalState } = props;\n    this.getGlobalState = getGlobalState;\n    this.setGlobalState = setGlobalState;\n    this.state = {\n      messageBuffer: '',\n      messages: [],\n    };\n  }\n\n  componentDidMount() {\n    global.window.document.addEventListener('keydown', this.handleSendMessageShortcut);\n    this.initMessages();\n    this.initMessageSubscribe();\n  }\n\n  componentWillUnmount() {\n    global.window.document.removeEventListener('keydown', this.handleSendMessageShortcut);\n  }\n\n  initMessages = async () => {\n    try {\n      // Set Pending State To Start\n      await this.setGlobalState({\n        isPending: true,\n      });\n      // Get All Message History\n      const { currentGroup, currentUser } = await this.getGlobalState();\n      const messageHistory = await libs.apigwClient.invokeAPIGateway({\n        path: '/messages',\n        method: 'GET',\n        queryParams: {\n          groupId: currentGroup,\n          startDate: '1000-01-01T00:00:00.000Z',\n          endtDate: new Date().toISOString(),\n          limit: 50,\n        },\n      }).then(result => result.data).catch(() => []);\n      // Parse Message History\n      const messages = messageHistory.map(e => ({\n        isMine: e.userName === currentUser,\n        userName: e.userName,\n        content: e.content,\n        regDate: e.regDate,\n      })).reverse();\n      this.setState(() => ({\n        messages,\n      }));\n      // Move Scroll To Bottom\n      this.moveMessageHistoryScollToBottom();\n      // Set Pending State To Finish\n      await this.setGlobalState({\n        isPending: false,\n      });\n    } catch (e) {\n      // console.log(e);\n    }\n  }\n\n  initMessageSubscribe = async () => {\n    try {\n      // Get Credentials From Previous Session Data\n      const cognitoCredentials = await libs.cognitoClient.getCredentials();\n      // Init MQTT Connection\n      const { currentGroup, currentUser } = await this.getGlobalState();\n      libs.mqttClient.init(cognitoCredentials, currentUser);\n      // Subscribe Message Group\n      await libs.mqttClient.subscribe(currentGroup);\n      libs.mqttClient.registerMessageCallback(this.handleRecievedMessage);\n    } catch (e) {\n      // console.log(e);\n    }\n  }\n\n  initMessageHistoryScoll = (el) => {\n    this.messageHistoryScrollDiv = el;\n  }\n\n  moveMessageHistoryScollToBottom = () => {\n    if (this.messageHistoryScrollDiv) {\n      this.messageHistoryScrollDiv.scrollIntoView(false);\n    }\n  }\n\n  handleSignout = async () => {\n    if (global.window.confirm('Signout Now?')) {\n      try {\n        libs.cognitoClient.signout();\n        libs.cognitoClient.clearStorage();\n        libs.mqttClient.disconnect();\n        await this.setGlobalState({\n          currentPage: '/signin',\n          currentUser: '',\n          currentGroup: '',\n        });\n        // Close Iframe Window\n        global.window.parent.postMessage('chat-off', '*');\n      } catch (e) {\n        // console.log(e);\n      }\n    }\n  }\n\n  handleRecievedMessage = async (messageChunk) => {\n    const newMessage = JSON.parse(messageChunk);\n    const { currentUser } = await this.getGlobalState();\n    newMessage.isMine = (newMessage.userName === currentUser);\n    this.setState(prevState => ({\n      messages: [...prevState.messages, newMessage],\n    }));\n    this.moveMessageHistoryScollToBottom();\n  }\n\n  handleInputMessage = (event) => {\n    const messageBuffer = event.target.value;\n    this.setState(() => ({\n      messageBuffer,\n    }));\n  }\n\n  handleSendMessage = async () => {\n    try {\n      const { messageBuffer } = this.state;\n      if (messageBuffer === '') return;\n      // Set Pending State To Start\n      this.setGlobalState({\n        isPending: true,\n      });\n      // Send Message to Database\n      const { currentGroup, currentUser } = await this.getGlobalState();\n      const messageBody = {\n        groupId: currentGroup,\n        regDate: new Date().toISOString(),\n        content: messageBuffer,\n        userName: currentUser,\n      };\n      await libs.apigwClient.invokeAPIGateway({\n        path: '/messages',\n        method: 'POST',\n        body: messageBody,\n      });\n      // Send Message to MQTT\n      await libs.mqttClient.publish(currentGroup, JSON.stringify(messageBody));\n      // Clear MessageBuffer\n      this.setState(() => ({\n        messageBuffer: '',\n      }));\n      // Set Pending State To Finish\n      this.setGlobalState({\n        isPending: false,\n      });\n      // Move Scroll To Bottom\n      this.moveMessageHistoryScollToBottom();\n    } catch (e) {\n      // console.log(e);\n    }\n  }\n\n  handleSendMessageShortcut = (event) => {\n    if (event.keyCode === 13 && event.ctrlKey) {\n      this.handleSendMessage();\n    }\n  }\n\n  handleMoveSignupPage = async () => {\n    await this.setGlobalState({\n      currentPage: '/group',\n    });\n  }\n\n  handleGetOlderMessages = async () => {\n    const { messages } = this.state;\n    if (messages.length !== 0) {\n      try {\n        // Set Pending State To Start\n        await this.setGlobalState({\n          isPending: true,\n        });\n        // Get Older Message History\n        const lastMessage = messages[0];\n        const lastMessageTime = new Date(lastMessage.regDate).getTime() - 1;\n        const { currentGroup, currentUser } = await this.getGlobalState();\n        const messageHistory = await libs.apigwClient.invokeAPIGateway({\n          path: '/messages',\n          method: 'GET',\n          queryParams: {\n            groupId: currentGroup,\n            startDate: '1000-01-01T00:00:00.000Z',\n            endDate: new Date(lastMessageTime).toISOString(),\n            limit: 50,\n          },\n        }).then(result => result.data).catch(() => []);\n        // Parse Message History\n        const olderMessages = (messageHistory || []).map(e => ({\n          isMine: e.userName === currentUser,\n          userName: e.userName,\n          content: e.content,\n          regDate: e.regDate,\n        })).reverse();\n        // Update Messages\n        this.setState(prevState => ({\n          messages: [...olderMessages, ...prevState.messages],\n        }));\n        // Set Pending State To Finish\n        await this.setGlobalState({\n          isPending: false,\n        });\n      } catch (e) {\n        // console.log(e);\n      }\n    }\n  }\n\n  render() {\n    const { messageBuffer, messages } = this.state;\n    return (\n      <ChatWrapper>\n        <ChatHeader\n          handleClickAppExitButton={this.handleSignout}\n          handleClickOpenChatGroupButton={this.handleMoveSignupPage}\n        />\n        <ChatBody\n          messages={messages}\n          messageBuffer={messageBuffer}\n          initMessageHistoryScoll={this.initMessageHistoryScoll}\n          handleGetOlderMessages={this.handleGetOlderMessages}\n          handleInputMessage={this.handleInputMessage}\n          handleSendMessage={this.handleSendMessage}\n        />\n      </ChatWrapper>\n    );\n  }\n}\n\nChat.propTypes = {\n  getGlobalState: PropTypes.func.isRequired,\n  setGlobalState: PropTypes.func.isRequired,\n};\n\nexport default Chat;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport ChatGroupHeader from './Header';\r\nimport ChatGroupBody from './Body';\r\nimport * as libs from '../../lib';\r\n\r\n/* Style-Wrapper */\r\nconst ChatGroupWrapper = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow: hidden;\r\n`;\r\n/* Component */\r\nclass ChatGroup extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const { getGlobalState, setGlobalState } = props;\r\n    this.getGlobalState = getGlobalState;\r\n    this.setGlobalState = setGlobalState;\r\n    this.state = {\r\n      chatGroups: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.initChatGroups();\r\n  }\r\n\r\n  initChatGroups = async () => {\r\n    try {\r\n      const { currentUser } = await this.getGlobalState();\r\n      const { data: chatGroups } = await libs.apigwClient.invokeAPIGateway({\r\n        path: '/messages/group/search',\r\n        method: 'GET',\r\n        queryParams: { userName: currentUser },\r\n      });\r\n      this.setState(() => ({\r\n        chatGroups,\r\n      }));\r\n    } catch (e) {\r\n      // console.log(e);\r\n    }\r\n  }\r\n\r\n  handleCloseChatGroupPage = async () => {\r\n    await this.setGlobalState({\r\n      currentPage: '/',\r\n    });\r\n  }\r\n\r\n  handleChangeCurrentChatGroup = async (changeGroup) => {\r\n    try {\r\n      // Set Pending State To Start\r\n      await this.setGlobalState({\r\n        isPending: true,\r\n      });\r\n      // Change Message Group Subscribe\r\n      const { currentGroup } = await this.getGlobalState();\r\n      await libs.mqttClient.unsubscribe(currentGroup);\r\n      await libs.mqttClient.subscribe(changeGroup);\r\n      // Update Current Chat Group\r\n      await this.setGlobalState({\r\n        isPending: false,\r\n        currentGroup: changeGroup,\r\n      });\r\n      // Exit Chat Group Page\r\n      await this.handleCloseChatGroupPage();\r\n    } catch (e) {\r\n      // console.log(e);\r\n      global.window.alert(e.message || e);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { chatGroups } = this.state;\r\n    return (\r\n      <ChatGroupWrapper>\r\n        <ChatGroupHeader\r\n          handleClickCloseChatGroupButton={this.handleCloseChatGroupPage}\r\n        />\r\n        <ChatGroupBody\r\n          chatGroups={chatGroups}\r\n          handleClickChatGroup={this.handleChangeCurrentChatGroup}\r\n        />\r\n      </ChatGroupWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nChatGroup.propTypes = {\r\n  getGlobalState: PropTypes.func.isRequired,\r\n  setGlobalState: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ChatGroup;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\n/* Style-Wrapper */\r\nconst MessageRawWrapper = styled.div`\r\n  padding-left: ${props => (props.isMine ? null : '10px')};\r\n  padding-right: ${props => (props.isMine ? '10px' : null)};\r\n  text-align: ${props => (props.isMine ? 'right' : 'left')};\r\n`;\r\nconst MessageBalloonWrapper = styled.div`\r\n  display: inline-block;\r\n  padding: 10px 12px;\r\n  margin-bottom: 3px;\r\n  max-width: 230px;\r\n  border-radius: 15px;\r\n  border-top-left-radius: ${props => (props.isMine ? null : '3px')};\r\n  border-top-right-radius: ${props => (props.isMine ? '3px' : null)};\r\n  text-align: ${props => (props.isMine ? 'right' : 'left')};\r\n  font-size: 14px;\r\n  white-space: pre-line;\r\n  word-break: break-word;\r\n  word-wrap: break-word;\r\n  background-color: #EEF1F4;\r\n  color: #516378;\r\n`;\r\n/* Component */\r\nconst Message = (props) => {\r\n  const { isMine, content } = props;\r\n  return (\r\n    <MessageRawWrapper isMine={isMine}>\r\n      <MessageBalloonWrapper isMine={isMine}>\r\n        <span>{content}</span>\r\n      </MessageBalloonWrapper>\r\n    </MessageRawWrapper>\r\n  );\r\n};\r\n\r\nMessage.propTypes = {\r\n  isMine: PropTypes.bool.isRequired,\r\n  content: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Message;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\n/* Style-Wrapper */\r\nconst MoreButtonWrapper = styled.div`\r\n  width: 100%;\r\n  height: 20px;\r\n`;\r\nconst TextButton = styled.span`\r\n  color: rgb(169,169,169);\r\n  cursor: pointer;\r\n`;\r\n/* Component */\r\nconst MoreButton = (props) => {\r\n  const { handleGetOlderMessages } = props;\r\n  return (\r\n    <MoreButtonWrapper>\r\n      <TextButton onClick={() => handleGetOlderMessages()}>\r\n        more\r\n      </TextButton>\r\n    </MoreButtonWrapper>\r\n  );\r\n};\r\n\r\nMoreButton.propTypes = {\r\n  handleGetOlderMessages: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default MoreButton;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport Message from './Message';\r\nimport MoreButton from './MoreButton';\r\n\r\n/* Style-Wrapper */\r\nconst MessageHistoryWrapper = styled.div`\r\n  width: 100%;\r\n  height: calc(100% - 80px);\r\n  padding: 12px 0px;\r\n  overflow-x: hidden;\r\n  overflow-y: auto;\r\n  -webkit-overflow-scrolling: touch;\r\n  background-color: #FFFFFF;\r\n  box-sizing: content-box;\r\n  -webkit-box-sizing: content-box;\r\n`;\r\nconst ScrollWrapper = styled.div`\r\n  height: auto;\r\n`;\r\n/* Component */\r\nconst MessageHistory = (props) => {\r\n  const { messages, handleGetOlderMessages, initMessageHistoryScoll } = props;\r\n  return (\r\n    <MessageHistoryWrapper>\r\n      <ScrollWrapper innerRef={el => initMessageHistoryScoll(el)}>\r\n        <MoreButton handleGetOlderMessages={handleGetOlderMessages} />\r\n        {\r\n          messages\r\n            ? messages.map((e, idx) => (\r\n              <Message\r\n                key={(i => `msg-${i}`)(idx)}\r\n                isMine={e.isMine}\r\n                userName={e.userName}\r\n                content={e.content}\r\n                regDate={e.regDate}\r\n              />))\r\n            : 'no-data'\r\n        }\r\n      </ScrollWrapper>\r\n    </MessageHistoryWrapper>\r\n  );\r\n};\r\n\r\nMessageHistory.propTypes = {\r\n  messages: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  initMessageHistoryScoll: PropTypes.func.isRequired,\r\n  handleGetOlderMessages: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default MessageHistory;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\n/* Style-Wrapper */\r\nconst InputBoxWrapper = styled.textarea`\r\n  height: 19px;\r\n  flex-grow: 1;\r\n  flex-shrink: 1;\r\n  flex-basis: 0;\r\n  font-size: 14px;\r\n  border: none;\r\n  resize: none;\r\n  margin: auto;\r\n  padding: 18px 10px 18px;\r\n  white-space: pre-wrap;\r\n  overflow-x: hidden;\r\n  overflow-y: auto;\r\n`;\r\n/* Component */\r\nconst InputBox = (props) => {\r\n  const { messageBuffer, handleChangeInputText } = props;\r\n  return (\r\n    <InputBoxWrapper\r\n      value={messageBuffer}\r\n      onChange={handleChangeInputText}\r\n      placeholder=\"Please Input Here.\"\r\n    />\r\n  );\r\n};\r\n\r\nInputBox.propTypes = {\r\n  messageBuffer: PropTypes.string.isRequired,\r\n  handleChangeInputText: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default InputBox;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\n/* Style-Wrapper */\r\nconst SendButtonWrapper = styled.div`\r\n  width: 46px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  cursor: pointer;\r\n\r\n  &:before {\r\n    content: '';\r\n    display: block;\r\n    width: 24px;\r\n    height: 24px;\r\n    background-image: url(./img/send-button.png);\r\n    background-size: cover;\r\n    opacity: 0.6;\r\n  }\r\n`;\r\n/* Component */\r\nconst SendButton = (props) => {\r\n  const { handleClickMessageSendButton } = props;\r\n  return <SendButtonWrapper onClick={() => handleClickMessageSendButton()} />;\r\n};\r\n\r\nSendButton.propTypes = {\r\n  handleClickMessageSendButton: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default SendButton;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport InputBox from './InputBox';\r\nimport SendButton from './SendButton';\r\n\r\n/* Style-Wrapper */\r\nconst MessageInputBoxWrapper = styled.div`\r\n  width: 100%;\r\n  height: 56px;\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n  border-top: 1px solid rgba(81,99,120,0.2);\r\n  box-sizing: content-box;\r\n  -webkit-box-sizing: content-box;\r\n`;\r\n/* Component */\r\nconst MessageInputBox = (props) => {\r\n  const {\r\n    messageBuffer,\r\n    handleChangeInputText, handleClickMessageSendButton,\r\n  } = props;\r\n  return (\r\n    <MessageInputBoxWrapper>\r\n      <InputBox messageBuffer={messageBuffer} handleChangeInputText={handleChangeInputText} />\r\n      <SendButton handleClickMessageSendButton={handleClickMessageSendButton} />\r\n    </MessageInputBoxWrapper>\r\n  );\r\n};\r\n\r\nMessageInputBox.propTypes = {\r\n  messageBuffer: PropTypes.string.isRequired,\r\n  handleChangeInputText: PropTypes.func.isRequired,\r\n  handleClickMessageSendButton: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default MessageInputBox;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport MessageHistory from './MessageHistory';\r\nimport MessageInputBox from './MessageInputBox';\r\n\r\n/* Style-Wrapper */\r\nconst ChatBodyWrapper = styled.div`\r\n  width: 100%;\r\n  height: calc(100% - 60px);\r\n  overflow: hidden;\r\n`;\r\n/* Component */\r\nconst ChatBody = (props) => {\r\n  const {\r\n    messages, messageBuffer,\r\n    handleInputMessage, handleSendMessage, handleGetOlderMessages, initMessageHistoryScoll,\r\n  } = props;\r\n  return (\r\n    <ChatBodyWrapper>\r\n      <MessageHistory\r\n        messages={messages}\r\n        initMessageHistoryScoll={initMessageHistoryScoll}\r\n        handleGetOlderMessages={handleGetOlderMessages}\r\n      />\r\n      <MessageInputBox\r\n        messageBuffer={messageBuffer}\r\n        handleChangeInputText={handleInputMessage}\r\n        handleClickMessageSendButton={handleSendMessage}\r\n      />\r\n    </ChatBodyWrapper>\r\n  );\r\n};\r\n\r\nChatBody.propTypes = {\r\n  messages: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  messageBuffer: PropTypes.string.isRequired,\r\n  handleInputMessage: PropTypes.func.isRequired,\r\n  handleSendMessage: PropTypes.func.isRequired,\r\n  initMessageHistoryScoll: PropTypes.func.isRequired,\r\n  handleGetOlderMessages: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ChatBody;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\n/* Style-Wrapper */\r\nconst ChatGroupButtonWrapper = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 56px;\r\n  height: 60px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  cursor: pointer;\r\n  \r\n  &:before {\r\n    content: '';\r\n    display: block;\r\n    width: 24px;\r\n    height: 24px;\r\n    background-image: url(./img/config-button.png);\r\n    background-size: cover;\r\n    opacity: 0.6;\r\n  }\r\n`;\r\n/* Component */\r\nconst ChatGroupButton = (props) => {\r\n  const { handleClickOpenChatGroupButton } = props;\r\n  return <ChatGroupButtonWrapper onClick={() => handleClickOpenChatGroupButton()} />;\r\n};\r\n\r\nChatGroupButton.propTypes = {\r\n  handleClickOpenChatGroupButton: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ChatGroupButton;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\n/* Style-Wrapper */\r\nconst AppExitButtonWrapper = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  width: 56px;\r\n  height: 60px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  cursor: pointer;\r\n  \r\n  &:before {\r\n    content: '';\r\n    display: block;\r\n    width: 24px;\r\n    height: 24px;\r\n    background-image: url(./img/close-button.png);\r\n    background-size: cover;\r\n    opacity: 0.6;\r\n  }\r\n`;\r\n/* Component */\r\nconst AppExitButton = (props) => {\r\n  const { handleClickAppExitButton } = props;\r\n  return <AppExitButtonWrapper onClick={() => handleClickAppExitButton()} />;\r\n};\r\n\r\nAppExitButton.propTypes = {\r\n  handleClickAppExitButton: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default AppExitButton;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport ChatGroupButton from './ChatGroupButton';\r\nimport AppExitButton from './AppExitButton';\r\n\r\n/* Style-Wrapper */\r\nconst ChatHeaderWrapper = styled.div`\r\n  position: relative;\r\n  height: 60px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border-top-left-radius: 12px;\r\n  border-top-right-radius: 12px;\r\n  font-size: 14px;\r\n  font-weight: 600;\r\n  color: white;\r\n  background-color: #4e66ff;\r\n  box-shadow: 0 1px 2px 0 rgba(47,55,64,0.2);\r\n  overflow: hidden;\r\n  z-index: 2;\r\n  align-items: center;\r\n`;\r\n/* Component */\r\nconst ChatHeader = (props) => {\r\n  const {\r\n    handleClickOpenChatGroupButton,\r\n    handleClickAppExitButton,\r\n  } = props;\r\n  return (\r\n    <ChatHeaderWrapper>\r\n      <ChatGroupButton handleClickOpenChatGroupButton={handleClickOpenChatGroupButton} />\r\n      ChatHeader\r\n      <AppExitButton handleClickAppExitButton={handleClickAppExitButton} />\r\n    </ChatHeaderWrapper>\r\n  );\r\n};\r\n\r\nChatHeader.propTypes = {\r\n  handleClickOpenChatGroupButton: PropTypes.func.isRequired,\r\n  handleClickAppExitButton: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ChatHeader;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\n/* Style-Wrapper */\r\nconst ChatGroupListItemWrapper = styled.div`\r\n  width: 100%;\r\n  height: 80px;\r\n  padding: 5px;\r\n  overflow: hidden;\r\n  background-color: #FFFFFF;\r\n  border-bottom: 1px solid #E8EBED;\r\n`;\r\nconst GroupName = styled.div`\r\n  width: 100%;\r\n  height: 30px;\r\n  padding: 4px 8px;\r\n  font-size: 20px;\r\n  font-weight: 600;\r\n  text-align: left;\r\n  border: none;\r\n`;\r\nconst LastMessage = styled.div`\r\n  width: 100%;\r\n  height: calc(100% - 30px);\r\n  padding: 0px 8px;\r\n  font-size: 12px;\r\n  text-align: left;\r\n  border: none;\r\n`;\r\n/* Component */\r\nconst ChatGroupListItem = (props) => {\r\n  const {\r\n    groupName, lastMessage,\r\n    handleClickChatGroup,\r\n  } = props;\r\n  return (\r\n    <ChatGroupListItemWrapper onClick={() => handleClickChatGroup(groupName)}>\r\n      <GroupName>{groupName}</GroupName>\r\n      <LastMessage>{lastMessage.content}</LastMessage>\r\n    </ChatGroupListItemWrapper>\r\n  );\r\n};\r\n\r\nChatGroupListItem.propTypes = {\r\n  groupName: PropTypes.string.isRequired,\r\n  lastMessage: PropTypes.shape({\r\n    userName: PropTypes.string,\r\n    content: PropTypes.string,\r\n    regDate: PropTypes.string,\r\n  }),\r\n  handleClickChatGroup: PropTypes.func.isRequired,\r\n};\r\n\r\nChatGroupListItem.defaultProps = {\r\n  lastMessage: {\r\n    content: '-',\r\n  },\r\n};\r\n\r\nexport default ChatGroupListItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport ChatGroupListItem from './GroupListItem';\r\n\r\n/* Style-Wrapper */\r\nconst ChatGroupListWrapper = styled.div`\r\n  width: 100%;\r\n  height: calc(100% - 60px);\r\n  overflow: hidden;\r\n  background-color: #FFFFFF;\r\n`;\r\n/* Component */\r\nconst ChatGroupList = (props) => {\r\n  const { chatGroups, handleClickChatGroup } = props;\r\n  return (\r\n    <ChatGroupListWrapper>\r\n      {\r\n        chatGroups.map(group => (\r\n          <ChatGroupListItem\r\n            key={group.groupName}\r\n            groupName={group.groupName}\r\n            groupNickName={group.groupnickname}\r\n            lastMessage={group.lastMessage}\r\n            handleClickChatGroup={handleClickChatGroup}\r\n          />))\r\n      }\r\n    </ChatGroupListWrapper>\r\n  );\r\n};\r\n\r\nChatGroupList.propTypes = {\r\n  chatGroups: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  handleClickChatGroup: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ChatGroupList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport ChatGroupList from './GroupList';\r\n\r\n/* Style-Wrapper */\r\nconst ChatGroupBodyWrapper = styled.div`\r\n  width: 100%;\r\n  height: calc(100% - 60px);\r\n  overflow: hidden;\r\n  background-color: #FFFFFF;\r\n`;\r\n/* Component */\r\nconst ChatGroupBody = (props) => {\r\n  const { chatGroups, handleClickChatGroup } = props;\r\n  return (\r\n    <ChatGroupBodyWrapper>\r\n      <ChatGroupList\r\n        chatGroups={chatGroups}\r\n        handleClickChatGroup={handleClickChatGroup}\r\n      />\r\n    </ChatGroupBodyWrapper>\r\n  );\r\n};\r\n\r\nChatGroupBody.propTypes = {\r\n  chatGroups: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  handleClickChatGroup: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ChatGroupBody;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\n/* Style-Wrapper */\r\nconst CloseButtonWrapper = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  cursor: pointer;\r\n  opacity: 0.6;\r\n  font-weight: 600;\r\n  padding: 0 16px;\r\n  text-overflow: ellipsis;\r\n  overflow: hidden;\r\n  white-space: nowrap;\r\n  max-width: 90px;\r\n`;\r\n/* Component */\r\nconst CloseButton = (props) => {\r\n  const { handleClickCloseChatGroupButton } = props;\r\n  return (\r\n    <CloseButtonWrapper onClick={() => handleClickCloseChatGroupButton()}>\r\n      닫기\r\n    </CloseButtonWrapper>\r\n  );\r\n};\r\n\r\nCloseButton.propTypes = {\r\n  handleClickCloseChatGroupButton: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default CloseButton;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport CloseButton from './CloseButton';\r\n\r\n/* Style-Wrapper */\r\nconst ChatGroupHeaderWrapper = styled.div`\r\n  position: relative;\r\n  height: 60px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border-top-left-radius: 12px;\r\n  border-top-right-radius: 12px;\r\n  font-size: 14px;\r\n  font-weight: 600;\r\n  color: white;\r\n  background-color: #4e66ff;\r\n  box-shadow: 0 1px 2px 0 rgba(47,55,64,0.2);\r\n  overflow: hidden;\r\n  z-index: 2;\r\n  align-items: center;\r\n`;\r\n/* Component */\r\nconst ChatGroupHeader = (props) => {\r\n  const { handleClickCloseChatGroupButton } = props;\r\n  return (\r\n    <ChatGroupHeaderWrapper>\r\n      <CloseButton handleClickCloseChatGroupButton={() => handleClickCloseChatGroupButton()} />\r\n      ChatGroupHeader\r\n    </ChatGroupHeaderWrapper>\r\n  );\r\n};\r\n\r\nChatGroupHeader.propTypes = {\r\n  handleClickCloseChatGroupButton: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ChatGroupHeader;\r\n","import React from 'react'\r\nimport styled from \"styled-components\";\r\nimport { Loader } from 'semantic-ui-react'\r\n\r\n\r\n/* Style-Wrapper */\r\nconst LoadingCircleWrapper = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    position: absolute;\r\n    top: 0px;\r\n    left: 0px;\r\n    background: rgba(0,0,0,0.6);\r\n    z-index: 255;\r\n`;\r\n/* Component */\r\nconst LoadingCircle = ()=>{\r\n    return (\r\n        <LoadingCircleWrapper>\r\n            <Loader active />\r\n        </LoadingCircleWrapper>\r\n    );\r\n};\r\nexport default LoadingCircle;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport ChatSignin from './components/ChatSignin';\r\nimport ChatSignup from './components/ChatSignup';\r\nimport Chat from './components/Chat';\r\nimport ChatGroup from './components/ChatGroup';\r\nimport LoadingCircle from './components/LoadingCircle';\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      isPending: false,\r\n      currentUser: undefined,\r\n      currentPage: '/signin',\r\n    };\r\n  }\r\n\r\n  getGlobalState = () => new Promise(\r\n    resolve => resolve(this.state),\r\n  );\r\n\r\n  setGlobalState = newState => new Promise(\r\n    resolve => this.setState(() => {\r\n      resolve();\r\n      return { ...newState };\r\n    }),\r\n  );\r\n\r\n  render() {\r\n    const { isPending, currentPage } = this.state;\r\n    return (\r\n      <div className=\"App\">\r\n        { isPending && <LoadingCircle /> }\r\n        {(() => {\r\n          switch (currentPage) {\r\n            case '/signin':\r\n              return (\r\n                <ChatSignin\r\n                  key=\"ChatSignin\"\r\n                  setGlobalState={this.setGlobalState}\r\n                  getGlobalState={this.getGlobalState}\r\n                />\r\n              );\r\n            case '/signup':\r\n              return (\r\n                <ChatSignup\r\n                  key=\"ChatSignup\"\r\n                  setGlobalState={this.setGlobalState}\r\n                  getGlobalState={this.getGlobalState}\r\n                />\r\n              );\r\n            case '/group':\r\n              return (\r\n                <ChatGroup\r\n                  key=\"ChatGroup\"\r\n                  setGlobalState={this.setGlobalState}\r\n                  getGlobalState={this.getGlobalState}\r\n                />\r\n              );\r\n            case '/':\r\n              return (\r\n                <Chat\r\n                  key=\"Chat\"\r\n                  setGlobalState={this.setGlobalState}\r\n                  getGlobalState={this.getGlobalState}\r\n                />\r\n              );\r\n            default:\r\n              return <h1>Something is wrong..!</h1>;\r\n          }\r\n        })()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n\r\n              // Execute callback\r\n              if (config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import 'react-app-polyfill/ie11';\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}